//1. Возврат массива чётных элементов: 
//Напишите функцию, которая принимает указатель
//на массив целых чисел и его размер, и возвращает 
//указатель на новый массив, содержащий только четные 
//элементы исходного массива. 

/*
#include <iostream>
using namespace std;

int* getEvenElements(const int* arr, int size, int& newSize) {
    newSize = 0;
    for (int i = 0; i < size; i++) {
        if (arr[i] % 2 == 0) {
            newSize++;
        }
    }

    int* evenArr = new int[newSize];
    int index = 0;

    for (int i = 0; i < size; i++) {
        if (arr[i] % 2 == 0) {
            evenArr[index++] = arr[i];
        }
    }

    return evenArr;
}

void freeArray(int* arr) {
    delete[] arr;
}

int main() {
    setlocale(LC_ALL, "russian");
    int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
    int size = sizeof(arr) / sizeof(arr[0]);
    int newSize = 0;

    int* evenArr = getEvenElements(arr, size, newSize);

    cout << "Четные элементы: ";
    for (int i = 0; i < newSize; i++) {
        cout << evenArr[i] << " ";
    }
    cout << endl;

    freeArray(evenArr);

    return 0;
} */

//4. Сортировка: 
//Напишите функцию, которая принимает указатель на 
//динамический массив целых чисел и его размер, и 
//сортирует массив по возрастанию.



/*
#include <iostream>
#include <algorithm> 
using namespace std;

void sortArray(int* arr, int size) {
    sort(arr, arr + size); 
}

int main() {
    setlocale(LC_ALL, "russian");
    int size = 5;
    int* arr = new int[size] {5, 2, 9, 1, 5};

    cout << "Неотсортированный массив: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    sortArray(arr, size);

    cout << "Отсортированный массив: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    delete[] arr;

    return 0;
}
*/

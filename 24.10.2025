MainForm.cs-
using System;
using System.Data;
using System.Windows.Forms;
using Microsoft.Data.SqlClient;

namespace DatabaseManager
{
    public partial class MainForm : Form
    {
        private string connectionString = "Data Source=(localdb)\\mssqllocaldb;Initial Catalog=WW;Integrated Security=True";
        
        public MainForm()
        {
            InitializeComponent();
            InitializeDatabase();
            LoadTableData();
        }

        private void InitializeDatabase()
        {
            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    
                    // Создание таблиц если они не существуют
                    string createTablesSql = @"
                        IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Departments')
                        BEGIN
                            CREATE TABLE Departments (
                                DepartmentID INT PRIMARY KEY IDENTITY(1,1),
                                DepartmentName NVARCHAR(50) NOT NULL
                            );
                        END

                        IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Employees')
                        BEGIN
                            CREATE TABLE Employees (
                                EmployeeID INT PRIMARY KEY IDENTITY(1,1),
                                Name NVARCHAR(100) NOT NULL,
                                DepartmentID INT NOT NULL,
                                CONSTRAINT FK_Employees_Departments FOREIGN KEY (DepartmentID) 
                                    REFERENCES Departments(DepartmentID)
                            );
                        END

                        IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Orders')
                        BEGIN
                            CREATE TABLE Orders (
                                OrderID INT PRIMARY KEY IDENTITY(1,1),
                                EmployeeID INT NOT NULL,
                                OrderDate DATE NOT NULL,
                                CONSTRAINT FK_Orders_Employees FOREIGN KEY (EmployeeID) 
                                    REFERENCES Employees(EmployeeID)
                            );
                        END

                        -- Вставляем тестовые данные если таблицы пустые
                        IF NOT EXISTS (SELECT 1 FROM Departments)
                        BEGIN
                            INSERT INTO Departments (DepartmentName) VALUES 
                            ('IT'), ('Sales'), ('Marketing'), ('Finance'), 
                            ('HR'), ('Operations'), ('Customer Service');
                        END";

                    using (SqlCommand command = new SqlCommand(createTablesSql, connection))
                    {
                        command.ExecuteNonQuery();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка инициализации БД: {ex.Message}", "Ошибка", 
                    MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void LoadTableData()
        {
            LoadDepartments();
            LoadEmployees();
            LoadOrders();
        }

        private void LoadDepartments()
        {
            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string sql = "SELECT * FROM Departments";
                    SqlDataAdapter adapter = new SqlDataAdapter(sql, connection);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);
                    dataGridViewDepartments.DataSource = dt;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка загрузки отделов: {ex.Message}");
            }
        }

        private void LoadEmployees()
        {
            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string sql = @"SELECT e.EmployeeID, e.Name, d.DepartmentName, e.DepartmentID 
                                 FROM Employees e 
                                 INNER JOIN Departments d ON e.DepartmentID = d.DepartmentID";
                    SqlDataAdapter adapter = new SqlDataAdapter(sql, connection);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);
                    dataGridViewEmployees.DataSource = dt;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка загрузки сотрудников: {ex.Message}");
            }
        }

        private void LoadOrders()
        {
            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string sql = @"SELECT o.OrderID, e.Name as EmployeeName, o.OrderDate, o.EmployeeID 
                                 FROM Orders o 
                                 INNER JOIN Employees e ON o.EmployeeID = e.EmployeeID";
                    SqlDataAdapter adapter = new SqlDataAdapter(sql, connection);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);
                    dataGridViewOrders.DataSource = dt;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка загрузки заказов: {ex.Message}");
            }
        }

        private void btnAddDepartment_Click(object sender, EventArgs e)
        {
            using (var form = new AddDepartmentForm())
            {
                if (form.ShowDialog() == DialogResult.OK)
                {
                    LoadDepartments();
                }
            }
        }

        private void btnAddEmployee_Click(object sender, EventArgs e)
        {
            using (var form = new AddEmployeeForm())
            {
                if (form.ShowDialog() == DialogResult.OK)
                {
                    LoadEmployees();
                }
            }
        }

        private void btnAddOrder_Click(object sender, EventArgs e)
        {
            using (var form = new AddOrderForm())
            {
                if (form.ShowDialog() == DialogResult.OK)
                {
                    LoadOrders();
                }
            }
        }

        private void btnDeleteDepartment_Click(object sender, EventArgs e)
        {
            if (dataGridViewDepartments.CurrentRow != null)
            {
                int departmentId = Convert.ToInt32(dataGridViewDepartments.CurrentRow.Cells["DepartmentID"].Value);
                
                if (MessageBox.Show("Вы уверены, что хотите удалить этот отдел?", "Подтверждение", 
                    MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    try
                    {
                        using (SqlConnection connection = new SqlConnection(connectionString))
                        {
                            connection.Open();
                            string sql = "DELETE FROM Departments WHERE DepartmentID = @DepartmentID";
                            using (SqlCommand command = new SqlCommand(sql, connection))
                            {
                                command.Parameters.AddWithValue("@DepartmentID", departmentId);
                                command.ExecuteNonQuery();
                            }
                        }
                        LoadDepartments();
                        LoadEmployees();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show($"Ошибка удаления: {ex.Message}");
                    }
                }
            }
        }

        private void btnDeleteEmployee_Click(object sender, EventArgs e)
        {
            if (dataGridViewEmployees.CurrentRow != null)
            {
                int employeeId = Convert.ToInt32(dataGridViewEmployees.CurrentRow.Cells["EmployeeID"].Value);
                
                if (MessageBox.Show("Вы уверены, что хотите удалить этого сотрудника?", "Подтверждение", 
                    MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    try
                    {
                        using (SqlConnection connection = new SqlConnection(connectionString))
                        {
                            connection.Open();
                            string sql = "DELETE FROM Employees WHERE EmployeeID = @EmployeeID";
                            using (SqlCommand command = new SqlCommand(sql, connection))
                            {
                                command.Parameters.AddWithValue("@EmployeeID", employeeId);
                                command.ExecuteNonQuery();
                            }
                        }
                        LoadEmployees();
                        LoadOrders(); // Обновляем заказы т.к. могли измениться связи
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show($"Ошибка удаления: {ex.Message}");
                    }
                }
            }
        }

        private void btnDeleteOrder_Click(object sender, EventArgs e)
        {
            if (dataGridViewOrders.CurrentRow != null)
            {
                int orderId = Convert.ToInt32(dataGridViewOrders.CurrentRow.Cells["OrderID"].Value);
                
                if (MessageBox.Show("Вы уверены, что хотите удалить этот заказ?", "Подтверждение", 
                    MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    try
                    {
                        using (SqlConnection connection = new SqlConnection(connectionString))
                        {
                            connection.Open();
                            string sql = "DELETE FROM Orders WHERE OrderID = @OrderID";
                            using (SqlCommand command = new SqlCommand(sql, connection))
                            {
                                command.Parameters.AddWithValue("@OrderID", orderId);
                                command.ExecuteNonQuery();
                            }
                        }
                        LoadOrders();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show($"Ошибка удаления: {ex.Message}");
                    }
                }
            }
        }

        private void btnRefresh_Click(object sender, EventArgs e)
        {
            LoadTableData();
        }
    }
}




AddDepartmentForm.cs-
using System;
using System.Windows.Forms;
using Microsoft.Data.SqlClient;

namespace DatabaseManager
{
    public partial class AddDepartmentForm : Form
    {
        private string connectionString = "Data Source=(localdb)\\mssqllocaldb;Initial Catalog=aboba;Integrated Security=True";
        
        public AddDepartmentForm()
        {
            InitializeComponent();
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(txtDepartmentName.Text))
            {
                MessageBox.Show("Введите название отдела");
                return;
            }

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string sql = "INSERT INTO Departments (DepartmentName) VALUES (@DepartmentName)";
                    using (SqlCommand command = new SqlCommand(sql, connection))
                    {
                        command.Parameters.AddWithValue("@DepartmentName", txtDepartmentName.Text);
                        command.ExecuteNonQuery();
                    }
                }
                DialogResult = DialogResult.OK;
                Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка добавления отдела: {ex.Message}");
            }
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            DialogResult = DialogResult.Cancel;
            Close();
        }
    }
}



AddEmployeeForm.cs-
using System;
using System.Data;
using System.Windows.Forms;
using Microsoft.Data.SqlClient;

namespace DatabaseManager
{
    public partial class AddEmployeeForm : Form
    {
        private string connectionString = "Data Source=(localdb)\\mssqllocaldb;Initial Catalog=aboba;Integrated Security=True";
        
        public AddEmployeeForm()
        {
            InitializeComponent();
            LoadDepartments();
        }

        private void LoadDepartments()
        {
            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string sql = "SELECT DepartmentID, DepartmentName FROM Departments";
                    SqlDataAdapter adapter = new SqlDataAdapter(sql, connection);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);
                    
                    comboDepartment.DataSource = dt;
                    comboDepartment.DisplayMember = "DepartmentName";
                    comboDepartment.ValueMember = "DepartmentID";
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка загрузки отделов: {ex.Message}");
            }
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(txtEmployeeName.Text))
            {
                MessageBox.Show("Введите имя сотрудника");
                return;
            }

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string sql = "INSERT INTO Employees (Name, DepartmentID) VALUES (@Name, @DepartmentID)";
                    using (SqlCommand command = new SqlCommand(sql, connection))
                    {
                        command.Parameters.AddWithValue("@Name", txtEmployeeName.Text);
                        command.Parameters.AddWithValue("@DepartmentID", comboDepartment.SelectedValue);
                        command.ExecuteNonQuery();
                    }
                }
                DialogResult = DialogResult.OK;
                Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка добавления сотрудника: {ex.Message}");
            }
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            DialogResult = DialogResult.Cancel;
            Close();
        }
    }
}


AddOrderForm.cs-
using System;
using System.Data;
using System.Windows.Forms;
using Microsoft.Data.SqlClient;

namespace DatabaseManager
{
    public partial class AddOrderForm : Form
    {
        private string connectionString = "Data Source=(localdb)\\mssqllocaldb;Initial Catalog=aboba;Integrated Security=True";
        
        public AddOrderForm()
        {
            InitializeComponent();
            LoadEmployees();
            dateOrderDate.Value = DateTime.Today;
        }

        private void LoadEmployees()
        {
            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string sql = "SELECT EmployeeID, Name FROM Employees";
                    SqlDataAdapter adapter = new SqlDataAdapter(sql, connection);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);
                    
                    comboEmployee.DataSource = dt;
                    comboEmployee.DisplayMember = "Name";
                    comboEmployee.ValueMember = "EmployeeID";
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка загрузки сотрудников: {ex.Message}");
            }
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string sql = "INSERT INTO Orders (EmployeeID, OrderDate) VALUES (@EmployeeID, @OrderDate)";
                    using (SqlCommand command = new SqlCommand(sql, connection))
                    {
                        command.Parameters.AddWithValue("@EmployeeID", comboEmployee.SelectedValue);
                        command.Parameters.AddWithValue("@OrderDate", dateOrderDate.Value);
                        command.ExecuteNonQuery();
                    }
                }
                DialogResult = DialogResult.OK;
                Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка добавления заказа: {ex.Message}");
            }
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            DialogResult = DialogResult.Cancel;
            Close();
        }
    }
}


MainForm.Designer.cs-
partial class MainForm
{
    private System.ComponentModel.IContainer components = null;
    private TabControl tabControl1;
    private TabPage tabDepartments;
    private TabPage tabEmployees;
    private TabPage tabOrders;
    private DataGridView dataGridViewDepartments;
    private DataGridView dataGridViewEmployees;
    private DataGridView dataGridViewOrders;
    private Button btnAddDepartment;
    private Button btnDeleteDepartment;
    private Button btnAddEmployee;
    private Button btnDeleteEmployee;
    private Button btnAddOrder;
    private Button btnDeleteOrder;
    private Button btnRefresh;

    protected override void Dispose(bool disposing)
    {
        if (disposing && (components != null))
        {
            components.Dispose();
        }
        base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
        this.components = new System.ComponentModel.Container();
        this.tabControl1 = new TabControl();
        this.tabDepartments = new TabPage();
        this.tabEmployees = new TabPage();
        this.tabOrders = new TabPage();
        this.dataGridViewDepartments = new DataGridView();
        this.dataGridViewEmployees = new DataGridView();
        this.dataGridViewOrders = new DataGridView();
        this.btnAddDepartment = new Button();
        this.btnDeleteDepartment = new Button();
        this.btnAddEmployee = new Button();
        this.btnDeleteEmployee = new Button();
        this.btnAddOrder = new Button();
        this.btnDeleteOrder = new Button();
        this.btnRefresh = new Button();

        // MainForm
        this.Text = "Database Manager";
        this.Size = new System.Drawing.Size(800, 600);
        this.StartPosition = FormStartPosition.CenterScreen;

        // TabControl
        this.tabControl1.Dock = DockStyle.Fill;
        this.tabControl1.Controls.Add(tabDepartments);
        this.tabControl1.Controls.Add(tabEmployees);
        this.tabControl1.Controls.Add(tabOrders);

        // TabPage Departments
        this.tabDepartments.Text = "Отделы";
        this.tabDepartments.Controls.Add(dataGridViewDepartments);
        this.tabDepartments.Controls.Add(btnAddDepartment);
        this.tabDepartments.Controls.Add(btnDeleteDepartment);

        // TabPage Employees
        this.tabEmployees.Text = "Сотрудники";
        this.tabEmployees.Controls.Add(dataGridViewEmployees);
        this.tabEmployees.Controls.Add(btnAddEmployee);
        this.tabEmployees.Controls.Add(btnDeleteEmployee);

        // TabPage Orders
        this.tabOrders.Text = "Заказы";
        this.tabOrders.Controls.Add(dataGridViewOrders);
        this.tabOrders.Controls.Add(btnAddOrder);
        this.tabOrders.Controls.Add(btnDeleteOrder);

        // DataGridViews
        ConfigureDataGridView(dataGridViewDepartments);
        ConfigureDataGridView(dataGridViewEmployees);
        ConfigureDataGridView(dataGridViewOrders);

        // Buttons for Departments
        ConfigureButton(btnAddDepartment, "Добавить отдел", 10, 10);
        ConfigureButton(btnDeleteDepartment, "Удалить отдел", 120, 10);

        // Buttons for Employees
        ConfigureButton(btnAddEmployee, "Добавить сотрудника", 10, 10);
        ConfigureButton(btnDeleteEmployee, "Удалить сотрудника", 150, 10);

        // Buttons for Orders
        ConfigureButton(btnAddOrder, "Добавить заказ", 10, 10);
        ConfigureButton(btnDeleteOrder, "Удалить заказ", 120, 10);

        // Refresh button
        this.btnRefresh.Text = "Обновить";
        this.btnRefresh.Size = new System.Drawing.Size(80, 30);
        this.btnRefresh.Location = new System.Drawing.Point(10, 550);
        this.btnRefresh.Click += btnRefresh_Click;
        this.Controls.Add(btnRefresh);

        this.Controls.Add(tabControl1);
    }

    private void ConfigureDataGridView(DataGridView dgv)
    {
        dgv.Dock = DockStyle.Fill;
        dgv.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;
        dgv.ReadOnly = true;
        dgv.AllowUserToAddRows = false;
        dgv.AllowUserToDeleteRows = false;
        dgv.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
    }

    private void ConfigureButton(Button btn, string text, int x, int y)
    {
        btn.Text = text;
        btn.Size = new System.Drawing.Size(100, 30);
        btn.Location = new System.Drawing.Point(x, y);
    }
}

Program.cs-
using System;
using System.Windows.Forms;

namespace DatabaseManager
{
    internal static class Program
    {
        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new MainForm());
        }
    }
}

